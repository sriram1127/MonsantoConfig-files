1. Generate a ssh key. https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/
1.        ssh-keygen -C <name of repository>  
2.        Enter file in which to save the key <name-of-repository>
3.        Enter passphrase (empty for no passphrase) - do not use a passphrase – just hit enter  
4.        Enter same passphrase again: do not use a passphrase – just hit enter  

5. This should have generated 2 files.  “name-of-repository” which is ssh private key and “name-of-repository.pub” which is ssh public key. 
1. Create a deploy key in GitHub. 
1. Goto Settings of the github project. 
2. Click “Deploy Keys”
3. Click “Add deploy key”
4. Title enter “Breeding Jenkins”
5. Copy the text of the public key into the Key field.  
6. Do NOT check the Allow write access
7. Click add key. 
2. Add Credentials to Jenkins.  
1. Open Jenkins and click “Credentials" then “System" from Jenkins main menu. 
2. Click “Global Credentials”  under Domain on the right side. 
3. Click “Add Credentials”
4. In the “Kind” Field select SSH username with private key
5. Enter in github repository name in UserName 
6. Select “enter directly” for the private key and past in the text from the private key you generated in step 1 including the begin and end lines. 
7. Leave Passphrase and ID blank.
8. In “Description” put "Deploy key for <project name>
3. Update Source Code Management.  
1. Select git. 
2. Add Repositories URL  like  "git@github.platforms.engineering:Breeding/<githubprojectname.git>"
3. Credentials – from drop down select the credentials you just added in 3. 
4. Add the branch
help.github.com
Generating a new SSH key and adding it to the ssh-agent - User Documentation
After you've checked for existing SSH keys, you can generate a new SSH key to use for authentication, then add it to the ssh-agent. …